---
- name: Initial Setup + Unattended Upgrades + Docker
  hosts: cloud_instance
  become: true
  become_user: root
  become_method: ansible.builtin.sudo
  remote_user: "{{ default_user }}"
  gather_facts: false
  vars_files:
    - vars.yml

  tasks:
    - name: Update package lists
      ansible.builtin.apt:
        update_cache: true

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: "full"
        state: present

    - name: Install nano with option --classic
      community.general.snap:
        name: nano
        classic: true
      when: arch == "arm64"

    - name: Install nano
      ansible.builtin.apt:
        name: nano
        state: present
      when: arch != "arm64"

    - name: Install kitty-terminfo
      ansible.builtin.apt:
        name: kitty-terminfo
        state: present

    - name: Install unattended-upgrades
      ansible.builtin.apt:
        name: unattended-upgrades
        state: present

    - name: Configure unattended-upgrades settings
      ansible.builtin.template:
        src: files/unattended-upgrades.conf.j2
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        mode: "0644"

    - name: Reconfigure dpkg
      ansible.builtin.command: dpkg-reconfigure -pmedium unattended-upgrades

    - name: Ensure directory for Docker GPG keys exists
      ansible.builtin.file:
        path: /etc/apt/keyrings/
        state: directory
        mode: "0755"

    - name: Download and add Docker GPG key
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/debian/gpg"
        dest: "/etc/apt/keyrings/docker.asc"
        mode: "0644"

    - name: Add Docker APT repository
      ansible.builtin.template:
        src: files/docker.list.j2
        dest: /etc/apt/sources.list.d/docker.list
        mode: "0644"

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker components
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin

    - name: Copy Docker configuration
      ansible.builtin.template:
        src: files/daemon.json.j2
        dest: /etc/docker/daemon.json
        mode: "0644"
        
    - name: Restart Docker service to apply changes
      ansible.builtin.service:
        name: docker
        state: restarted

    - name: Add main user
      ansible.builtin.user:
        name: "{{ main_user }}"
        password: "{{ main_user_pass | password_hash('sha512') }}"

    - name: Add main user to sudo group
      ansible.builtin.user:
        name: "{{ main_user }}"
        groups: sudo
        append: yes

    - name: Create SSH directory
      ansible.builtin.command: mkdir -p /home/{{ main_user }}/.ssh

    - name: Copy authorized_keys from provisioned user
      ansible.builtin.copy:
        src: /home/{{ default_user }}/.ssh/authorized_keys
        dest: /home/{{ main_user }}/.ssh/authorized_keys
        owner: "{{ main_user }}"
        group: "{{ main_user }}"
        mode: "0600"
        remote_src: yes

    - name: Add github action runner user
      ansible.builtin.user:
        name: github
      when: arch == "arm64"

    - name: Add docker group to github action runner user
      ansible.builtin.user:
        name: github
        groups: docker
        append: yes
      when: arch == "arm64"

    - name: Template SSH configuration
      ansible.builtin.template:
        src: files/00-harden.conf.j2
        dest: /etc/ssh/sshd_config.d/00-harden.conf
        owner: root
        group: root
        mode: "0644"

    - name: Reboot System
      ansible.builtin.reboot:
        connect_timeout: 60
        reboot_timeout: 5
      ignore_errors: true

  pre_tasks:
    - name: Add host key to known_hosts
      known_hosts:
        name: "{{ ansible_ssh_host }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -t ed25519 ' + ansible_ssh_host) }}"
        state: present
      delegate_to: localhost
      run_once: true
      become: false
    - name: Install curl if not present
      ansible.builtin.apt:
        name: curl
        state: present
